{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-09-28T01:13:27.665557+00:00",
  "repo": "paulbastian/draft-bastian-jose-dvs",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOLDmL8c58uqsC",
      "title": "Align with standard JWS headers ",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/1",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "From a conversation over at https://github.com/oauth-wg/oauth-selective-disclosure-jwt/issues/369#issuecomment-1902056559\r\n\r\n> > > https://paulbastian.github.io/jose-ecdh-mac-algorithms/draft-bastian-jose-alg-ecdh-mac.html\r\n\r\n> >  interesting work @paulbastian! I might humbly suggest that you revisit how the header parameters are used to better align with how they are already defined in JWS. Specifically, I think the standard JWS headers https://www.rfc-editor.org/rfc/rfc7515#section-4.1 like kid/jwk/x5c/x5t/etc should be for indicating the key of the Generating Party, which is really like the signer in this case. And a new header be defined to convey the Verifying Party's key. What's in draft-bastian-jose-alg-ecdh-mac-01 currently feels kinda backwards from what JWS has. And the Generating Party's key is probably not going to be ephemeral in most cases so epk doesn't seem quite right.\r\n\r\n> Thanks for the feedback @bc-pi\r\n> The header names were the part that I was least sure about, I oriented on the ECDH-ES part of JWA. But I don't mind changing them, feel free to open an issue on the repo!",
      "createdAt": "2024-01-21T14:25:22Z",
      "updatedAt": "2024-06-17T15:47:22Z",
      "closedAt": "2024-06-17T15:47:22Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "Solved in newest version",
          "createdAt": "2024-06-17T15:47:12Z",
          "updatedAt": "2024-06-17T15:47:12Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOLDmL8c6Mhzyy",
      "title": "Give Signing Party the option to set a salt for the KDF?",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/5",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-17T15:46:55Z",
      "updatedAt": "2024-11-19T17:59:13Z",
      "closedAt": null,
      "comments": [
        {
          "author": "sander",
          "authorAssociation": "NONE",
          "body": "In mdoc, the HKDF salt is set to `SHA-256(SessionTranscriptBytes)`, which consists of:\r\n\r\n- `DeviceEngagementBytes` which contains:\r\n     - protocol version number\r\n     - ciphersuite identifier\r\n     - ephemeral device public key\r\n     - possibly supported device retrieval method information\r\n     - possibly supported server retrieval method information\r\n     - possibly protocol information (reserved for future use)\r\n     - possibly additional information (reserved for future use)\r\n- `EReaderKeyBytes` which contains the ephemeral reader public key\r\n- `Handover` which is empty in the case of QR code device engagement\r\n\r\nIt makes sense to support setting the salt in DVS as well. Or do you envision using the the JWS header for such information? If so, did you already analyse the security properties of having it there and using a constant (potentially empty) salt?\r\n\r\nIn the current version the default value is specified as `salt=\"\"`, implying that the salt is a human-readable string. Instead, it is likely to be some octet string output of a hash function.",
          "createdAt": "2024-11-19T17:51:17Z",
          "updatedAt": "2024-11-19T17:59:13Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOLDmL8c6MnOHJ",
      "title": "What are consequences of Signing Party using static keys?",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/6",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-18T06:59:27Z",
      "updatedAt": "2024-06-18T06:59:27Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOLDmL8c6Xgr9i",
      "title": "Define what 'use' value is used for keys in JWKS",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/7",
      "state": "OPEN",
      "author": "jogu",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think the spec could state/show examples of a suitable JWK within a JWKS and how 'use' or other key parameters could be used to select a key.",
      "createdAt": "2024-09-23T08:28:35Z",
      "updatedAt": "2024-09-23T08:28:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 9,
      "id": "I_kwDOLDmL8c6Z20X-",
      "title": "Add non-normative example",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/9",
      "state": "OPEN",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-11T12:38:38Z",
      "updatedAt": "2024-10-11T12:38:38Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOLDmL8c63vNbx",
      "title": "Remove HPKE cases for interoperability reasons",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/10",
      "state": "CLOSED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-22T08:59:34Z",
      "updatedAt": "2025-06-04T10:18:18Z",
      "closedAt": "2025-06-04T10:18:18Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOLDmL8c63vSjP",
      "title": "Add Co-Authors",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/11",
      "state": "CLOSED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mickrau"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-22T09:06:53Z",
      "updatedAt": "2025-06-27T12:30:36Z",
      "closedAt": "2025-06-27T12:30:36Z",
      "comments": [
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "add Stefan Santesson (IDsec Solutions) and Peter Lee Altmann (The Agency for Digital Government)",
          "createdAt": "2025-06-04T11:20:27Z",
          "updatedAt": "2025-06-04T11:20:27Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOLDmL8c63vTww",
      "title": "Using standard algorithm identifiers for HMAC signatures",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/12",
      "state": "OPEN",
      "author": "Razumain",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I propose to use the standard alg parameters for HMAC signatures (HS256, HS384, HS512).\n\nI have a couple of arguments.\n\n**1) It correctly describes the signature algorithm used**\n\nThe standard alg values for HMAC is true regardless of how you derive the HMAC key.\nIf you were using HPKE as the mechanism to create the encrypted payload, it would make more sense to change the alg value.\nToday you need the create header parameters anyway, and the key derivation mechanism could be identifier here instead of changing the alg value.\n\n**2) Compatibility with existing implementations of JOSE**\n\nIf we stick with standard alg values for HMAC, we could pre-process the key derivation and use standard JOSE implementations to create and verify the signature. If we alter the alg value and require the JOSE implementation to handle key derivation, I would need a custom JOSE library. If this spec is not widely adopted, it may take a very long time to reach interoperability, if ever.\n\nSticking with standard alg values will provide interoperability from day 1.",
      "createdAt": "2025-05-22T09:08:40Z",
      "updatedAt": "2025-06-04T11:02:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "Stefan: new header field should not be critical (agreed)\n\n1. Cleanup (other)\n2. PR with standard alg values\n3. ask JOSE mailing list",
          "createdAt": "2025-06-04T11:02:30Z",
          "updatedAt": "2025-06-04T11:02:30Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOLDmL8c63vXiJ",
      "title": "Consolidate header parameters into one parameter with structured data",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/13",
      "state": "OPEN",
      "author": "Razumain",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "Razumain"
      ],
      "labels": [],
      "body": "I would propose to define one header parameter for HMAC key derivation that in turn contains a structured JSON structured, represented by Base64URL encoded string.\n\nThis is for comparison the way that ETSI took in their JAdES specification. It requires less header parameter registrations and I personally think it is much easier to handle in an implementation.\n\nI think we should avoid using a mix of current standardized header parameters and custom parameters in order to ensure that we don't confuse standard JOSE libraries who understands the standardized parameters but not the new ones.",
      "createdAt": "2025-05-22T09:14:09Z",
      "updatedAt": "2025-06-04T11:29:41Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Razumain",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the header parameter should cover the following:\n\n- Identifier of the HMAC key deriviation process\n- Optional public key of the signer key pair (can be omitted if it is given by the context, such as through a SD JWT cnf claim)\n- key identifier, public key or certificate of the recipient public key corresponding to the private key the verifier must use in the key derivation process.\n- length of the derived key\n- Optional info parameter\n\nFor the purpose of this specification I think we are fine with not specifying salt. If using HPKE, salt is derived inside HPKE, and for HKDF I think we are fine with either a null salt or a deterministically derived value (such as hash of the signed payload or similar).",
          "createdAt": "2025-05-22T09:45:27Z",
          "updatedAt": "2025-05-22T09:45:27Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that using one JSON object header parameter that consolidates all necessary data is a good idea.\nI don't understand why it should be represented as a Base64URL encoded string instead of plain JSON object.\nI would prefer to use Base64URL only for the object's elements that are direct input for crypto operations.\n",
          "createdAt": "2025-06-04T10:17:58Z",
          "updatedAt": "2025-06-04T10:17:58Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "use structure like this\n\n\"new_header_name\": {\n  \"hkdf\": {\n   //specific parameters\n },\n\"xy_kem\":{\n  // xy_kem specific parameters\n}\n}",
          "createdAt": "2025-06-04T11:12:19Z",
          "updatedAt": "2025-06-04T11:12:19Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "Question: Should length of the derived key be specified, or always minimum by default?",
          "createdAt": "2025-06-04T11:29:40Z",
          "updatedAt": "2025-06-04T11:29:40Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOLDmL8c63vY8H",
      "title": "Cover info in header parameters to the verifier",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/14",
      "state": "OPEN",
      "author": "Razumain",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The specification should be clear on the default info parameter value, but I think it would be valuable for implementations to choose their own value.\n\nI propose to allow the header parameters for key derivation to specify an info value, but if not set, use the default value specified in the document.",
      "createdAt": "2025-05-22T09:16:15Z",
      "updatedAt": "2025-06-04T10:07:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "That's how we originally intended it, but we probably need to make it clearer.",
          "createdAt": "2025-06-04T10:07:05Z",
          "updatedAt": "2025-06-04T10:07:05Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOLDmL8c63vgvb",
      "title": "Use HKDF instead of HPKE as the default and mandatory to implement key derivation function.",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/15",
      "state": "CLOSED",
      "author": "Razumain",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mickrau"
      ],
      "labels": [],
      "body": "Use of HPKE has a number of drawbacks (even if it has its pros as well)\n\n- It is basically a function for providing encryption. We only use half (The key derivation part) which works, but sort of defeats the purpose of HPKE. When using a standard HPKE implementation, I will have to specify an encryption algorithm that will never be used. This will likely confuse some implementers.\n- HPKE is informational, and in relation to JOSE that may create some downref problems. Not very severe, but still.\n\nAnother argument is that HKDF of a Diffie-Hellman shared secret is very easy and straightforward. And does everything we need.\n\n\nI propose:\n\n- Keep using an identifier that specifies exactly what key derivation method that is used, but include a HKDF based method that does not involve HPKE.\n- Make the HKDF variant mandatory to support.\n\nI'm open to keeping HPKE variants, but I would actually prefer to get rid of HPKE as it isn't a perfect fit for just key derivation.",
      "createdAt": "2025-05-22T09:26:11Z",
      "updatedAt": "2025-06-27T12:30:48Z",
      "closedAt": "2025-06-27T12:30:48Z",
      "comments": [
        {
          "author": "Razumain",
          "authorAssociation": "COLLABORATOR",
          "body": "I forgot to add the argument that we may want to process this in less capable environments, like mobile phones and other devices that likely have native support for HKDF, but probably not HPKE. Requiring HPKE support on these devices will create a lot of work for little gain.",
          "createdAt": "2025-05-22T09:35:00Z",
          "updatedAt": "2025-05-22T09:35:00Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "Good points. We already discussed this and initially moved the HPKE variant to the appendix, but I agree that we should remove it entirely for now.",
          "createdAt": "2025-06-04T10:05:41Z",
          "updatedAt": "2025-06-04T10:05:41Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "agreed on removing it",
          "createdAt": "2025-06-04T10:49:15Z",
          "updatedAt": "2025-06-04T10:49:15Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOLDmL8c65z0Rd",
      "title": "propitiate scoping / position",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/16",
      "state": "OPEN",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "focus on how to get the symmetric key",
      "createdAt": "2025-06-04T10:44:50Z",
      "updatedAt": "2025-06-04T11:17:41Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "proposal by Stefan\npkds: \"public key derived secret\"",
          "createdAt": "2025-06-04T11:15:09Z",
          "updatedAt": "2025-06-04T11:15:09Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "Peter will make first proposal",
          "createdAt": "2025-06-04T11:17:40Z",
          "updatedAt": "2025-06-04T11:17:40Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOLDmL8c7GLMAN",
      "title": "Title suggestion",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/21",
      "state": "OPEN",
      "author": "AltmannPeter",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As earlier discussed, DVS is not what we are doing here, and is not what we should be doing either :).\n\ntitle: \"Public Key Derived Secrets for JOSE\"\nabbrev: \"PKDS for JOSE\"",
      "createdAt": "2025-08-15T09:26:19Z",
      "updatedAt": "2025-09-15T16:22:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "Agreed. Depending on where the scope of the draft ends up, it could also be \"public key derived MACs\".\nWe need to decide whether we define  a common mechanism to drive a shared secret and then on top algorithms to combine this with HMAC or whether to combine both into a single, simpler approach.",
          "createdAt": "2025-08-15T14:41:24Z",
          "updatedAt": "2025-08-15T14:45:40Z"
        },
        {
          "author": "Razumain",
          "authorAssociation": "COLLABORATOR",
          "body": "Alternative:\n\nPublic Key Derived Secrets for JOSE HMAC signatures.\n\n bit longer but more precise",
          "createdAt": "2025-08-28T06:59:19Z",
          "updatedAt": "2025-08-28T06:59:19Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "Looking at [some](https://datatracker.ietf.org/doc/draft-ietf-cose-dilithium) [examples](https://datatracker.ietf.org/doc/draft-ietf-jose-fully-specified-algorithms/) lately it seems more common to add \"for JOSE\" in the end.\n\nPublic Key Derived HMAC Signatures for JOSE\nPublic Key Derived HMACs for JOSE",
          "createdAt": "2025-09-01T15:57:40Z",
          "updatedAt": "2025-09-01T15:57:40Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Throwing this into the consideration bin: Public Key Derived Symmetric Signatures for JOSE",
          "createdAt": "2025-09-01T19:05:56Z",
          "updatedAt": "2025-09-01T19:05:56Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "My thinking is, that we are neither intending to create a general mechanism for secrets nor for other symmetric signatures ",
          "createdAt": "2025-09-01T20:07:45Z",
          "updatedAt": "2025-09-01T20:07:45Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> My thinking is, that we are neither intending to create a general mechanism for secrets nor for other symmetric signatures\n\nWe are targeting HMAC for sure. \n\nAs for the general mechanism, what are are doing is a general mechanism to communicate all information required to derive a shared key in a token, or? \n\nSo, building on one of your earlier proposals: Public Key Derived HMAC Signatures for JOSE could be changed to reflect that it is the HMAC key you derive. I.e.,\n\n1. Public Key Derived HMAC **Keys** for JOSE, or \n2. Public Key Derived HMAC for JOSE\n\nI like the second shorter one since it is more crisp and to the point.",
          "createdAt": "2025-09-03T10:47:53Z",
          "updatedAt": "2025-09-03T10:48:49Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "> Public Key Derived HMAC for JOSE\n\nThat would be my favorite as well",
          "createdAt": "2025-09-03T11:22:24Z",
          "updatedAt": "2025-09-03T11:22:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "body": "> > Public Key Derived HMAC for JOSE\n> \n> That would be my favorite as well\n\n@Razumain fine with this?",
          "createdAt": "2025-09-03T14:43:12Z",
          "updatedAt": "2025-09-03T14:43:12Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think you should just go with it @paulbastian ;).",
          "createdAt": "2025-09-06T16:46:28Z",
          "updatedAt": "2025-09-06T16:46:28Z"
        },
        {
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "body": "> Public Key Derived HMAC for JOSE\n\nI'm also fine with the last proposal ",
          "createdAt": "2025-09-15T16:22:00Z",
          "updatedAt": "2025-09-15T16:22:00Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOLDmL8c7IZnkI",
      "title": "Restrict options for `rpk`",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/22",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Allow everything in RFC7515 to reference a key or only allow a subset?",
      "createdAt": "2025-08-28T07:25:23Z",
      "updatedAt": "2025-08-28T07:25:23Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOLDmL8c7IZrAq",
      "title": "I would prefer name this closer to key derviation, e.g. kd-params, or kd",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/23",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "I would prefer name this closer to key derviation, e.g. kd-params, or kd\r\n\r\n_Originally posted by @paulbastian in https://github.com/paulbastian/draft-bastian-jose-dvs/pull/20#discussion_r2285665323_\r\n            ",
      "createdAt": "2025-08-28T07:30:05Z",
      "updatedAt": "2025-08-28T07:30:05Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOLDmL8c7L5dcu",
      "title": "rework JOSE parameter description",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/24",
      "state": "OPEN",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "move chapter 4 \"The \"pkds\" Header Parameter\" into chapter 7 \"Designated Verifier Signatures for JOSE\"",
      "createdAt": "2025-09-16T07:24:15Z",
      "updatedAt": "2025-09-16T07:24:15Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 26,
      "id": "I_kwDOLDmL8c7NST7c",
      "title": "Do we need the HKDF salt at all?",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/26",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Could we always set it to the default value?",
      "createdAt": "2025-09-23T07:54:53Z",
      "updatedAt": "2025-09-24T10:40:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I propose we remove the salt as a parameter.\n\nhttps://datatracker.ietf.org/doc/html/rfc5869#section-3.1 discuss the use or not of a salt. Also the [original paper](https://eprint.iacr.org/2010/264) uses a single salt in the security definition of HKDF. \n\nThe salt must be a fixed random value or NULL. May as well skip it entirely to avoid implementor mistakes.\n\nEDIT: We have a high entropy ikm (ECDH) that is non-uniform. The randomness extractor does not need salt, it just needs to smoothen the randomness to make it uniform and thus suitable for the PRF.",
          "createdAt": "2025-09-23T10:19:48Z",
          "updatedAt": "2025-09-23T12:56:04Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also, if we remove salt, then we can remove the hkdf parameter key as well as we only have info left to specify.",
          "createdAt": "2025-09-24T10:40:14Z",
          "updatedAt": "2025-09-24T10:40:14Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOLDmL8c7NxjG3",
      "title": "Should we define info as text only?",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/issues/27",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "> Should we define info as text only and not allow byte to avoid base64url twice encoding? \n\n _Originally posted by @AltmannPeter in [#25](https://github.com/paulbastian/draft-bastian-jose-dvs/pull/25/files#r2369579232)_",
      "createdAt": "2025-09-25T07:32:44Z",
      "updatedAt": "2025-09-25T07:32:44Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "PR_kwDOLDmL8c5yXUBw",
      "title": "add basic steps of hpke based scheme",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/2",
      "state": "MERGED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- [x] add basic protocol steps\r\n- [x] add reference to HPKE spec \r\n- [x] add author",
      "createdAt": "2024-06-13T13:24:33Z",
      "updatedAt": "2024-06-14T10:41:39Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "c01cd0661e60ff153e2037e428008040c8c73ad4",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "hpke",
      "headRefOid": "373c83aab0880bae837f776383269bad8ddbbcf8",
      "closedAt": "2024-06-14T10:41:35Z",
      "mergedAt": "2024-06-14T10:41:35Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "1916d89c235becc60333c270564c409a4062736b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c5-P2GA",
          "commit": {
            "abbreviatedOid": "373c83a"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-14T10:41:29Z",
          "updatedAt": "2024-06-14T10:41:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOLDmL8c5ytGU6",
      "title": "Rework crypo primitives",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/3",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-17T14:49:55Z",
      "updatedAt": "2024-06-17T14:50:35Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "1916d89c235becc60333c270564c409a4062736b",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "rework_crypo_primitives",
      "headRefOid": "f8ed1829fb7bf6f85bd8a4c56001fd4d4abfd8a8",
      "closedAt": "2024-06-17T14:50:32Z",
      "mergedAt": "2024-06-17T14:50:32Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "5827a093ef73349d3581860476e02588c1697c6a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOLDmL8c5ytKXG",
      "title": "fix markup",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/4",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-17T14:58:22Z",
      "updatedAt": "2024-06-17T14:58:33Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "5827a093ef73349d3581860476e02588c1697c6a",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "rework_crypo_primitives",
      "headRefOid": "070c22d87e56166ffc3809c9f17a0208dc92f6b3",
      "closedAt": "2024-06-17T14:58:29Z",
      "mergedAt": "2024-06-17T14:58:29Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "2ed188c9cd917f3e040739fee6e3d775f95e8322"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOLDmL8c59Qg5B",
      "title": "Refactoring",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/8",
      "state": "MERGED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mickrau",
        "paulbastian"
      ],
      "labels": [],
      "body": "- [x] rename to draft-bastian-jose-dvs\r\n- [x] add references to ISO mDL an BSI TR\r\n- [x] remove organization\r\n- [x] move HPKE mode to appendix\r\n- [x] move functions\r\n- [x] rename github repo to https://github.com/paulbastian/draft-bastian-jose-dvs/ (change references)\r\n- [x] add reference to HKDF\r\n- [x] add reference to HMAC\r\n- [ ] add example signature?",
      "createdAt": "2024-10-01T13:38:37Z",
      "updatedAt": "2024-10-17T13:23:36Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "7ed7546b1cebf31561af2f8173186231e7d688f5",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "refactor_name",
      "headRefOid": "0ce050abbde2ea8c98ec1e65a2f024080932222d",
      "closedAt": "2024-10-17T13:23:25Z",
      "mergedAt": "2024-10-17T13:23:25Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "dbc0fce7c1d94f9be3d5e0fd2f7ca374bf421c6a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c6NkxdP",
          "commit": {
            "abbreviatedOid": "f17caa1"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T13:20:14Z",
          "updatedAt": "2024-10-17T13:20:14Z",
          "comments": [
            {
              "originalPosition": 263,
              "body": "```suggestion\r\n- Another method requires that the verifying party's public key is a shared key that has previously been calculated with the keys of certain specific third parties so that the proof of authenticity can be done with Multi Party Computation involving all parties (see {{TLS-NOTARY}}).\r\n```",
              "createdAt": "2024-10-17T13:20:14Z",
              "updatedAt": "2024-10-17T13:20:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c6NkxzC",
          "commit": {
            "abbreviatedOid": "0ce050a"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-17T13:20:44Z",
          "updatedAt": "2024-10-17T13:20:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOLDmL8c6ZJrNe",
      "title": "remove HPKE variant",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/17",
      "state": "MERGED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Solves #15 ",
      "createdAt": "2025-06-05T08:00:16Z",
      "updatedAt": "2025-06-10T07:41:07Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "efa3b854c9153cff0e240e36e3e5ffe381ca4a96",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "remove-hpke",
      "headRefOid": "a78ae0b8b3b2f890d4abad24a14c6813a729eaf2",
      "closedAt": "2025-06-10T07:41:07Z",
      "mergedAt": "2025-06-10T07:41:07Z",
      "mergedBy": "mickrau",
      "mergeCommit": {
        "oid": "af240131c5c2bcef7aea0ec87f6a1aa325553537"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOLDmL8c6ZK7Ri",
      "title": "add Stefan and Peter as co-authors",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/18",
      "state": "MERGED",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Solves #11 ",
      "createdAt": "2025-06-05T10:01:13Z",
      "updatedAt": "2025-06-10T07:38:41Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "dbc0fce7c1d94f9be3d5e0fd2f7ca374bf421c6a",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "edit_contributors",
      "headRefOid": "58919d5e7210f0850294bf894fea152a32da5897",
      "closedAt": "2025-06-10T07:38:41Z",
      "mergedAt": "2025-06-10T07:38:41Z",
      "mergedBy": "mickrau",
      "mergeCommit": {
        "oid": "efa3b854c9153cff0e240e36e3e5ffe381ca4a96"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c6s4KaQ",
          "commit": {
            "abbreviatedOid": "58919d5"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-05T13:44:04Z",
          "updatedAt": "2025-06-05T13:44:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOLDmL8c6Zyb-H",
      "title": "Update introduction for draft-bastian-jose-dvs.md",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/19",
      "state": "MERGED",
      "author": "AltmannPeter",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Updated introduction",
      "createdAt": "2025-06-10T05:55:40Z",
      "updatedAt": "2025-08-29T17:51:30Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "aaa9e9cfa0bff9d6da15ac4d4e99ab00d4b6fadc",
      "headRepository": "AltmannPeter/draft-bastian-jose-dvs",
      "headRefName": "patch-1",
      "headRefOid": "0019e8325db3ca4597c9258f3689dde85b0acd39",
      "closedAt": "2025-08-29T17:51:30Z",
      "mergedAt": "2025-08-29T17:51:30Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "4262abb596578e67c7dbc6be47eafe735d3381f3"
      },
      "comments": [
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Two points to discuss: 1- do we need to distinuguish Issuer and Presenter? Imo for the context of this draft having two parties should by enough? 2- We need to align on the terminology for the roles/entities. In my opinion, we should either stick to the very generic terminology(producing/generating and receiving/recipient) or we adopt the three party model and take the vocabular used in SD-JWT\r\n\r\nGotten similar feedback from Stefan. IMO:\r\n\r\n1. I built on RFC 7800 (which has three actors and I used their terms). Stefan also pointed out that we likely should not focus on RFC 7800, in which case there is no reason to have three actors, or perhaps even any actors at all.\r\n2. Let us stick with generic terminology as it aligns better with RFC 7515 / 7518.\r\n\r\nWill update today according to the above.",
          "createdAt": "2025-06-12T05:10:16Z",
          "updatedAt": "2025-06-12T05:10:16Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Update done. Also, made the text more general by not mandating a JWT, instead focusing on the JWS.",
          "createdAt": "2025-06-12T07:44:17Z",
          "updatedAt": "2025-06-12T07:44:17Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Updated abstract and adjusted intro. Minor changes to terminology. Will continue with the data objects tomorrow.",
          "createdAt": "2025-06-12T10:21:28Z",
          "updatedAt": "2025-06-12T10:21:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c6t9E7e",
          "commit": {
            "abbreviatedOid": "8dd09fc"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "Two points to discuss:\r\n1- do we need to distinuguish Issuer and Presenter? Imo for the context of this draft having two parties should by enough?\r\n2- We need to align on the terminology for the roles/entities. In my opinion, we should either stick to the very generic terminology(producing/generating and receiving/recipient) or we adopt the three party model and take the vocabular used in SD-JWT",
          "createdAt": "2025-06-11T19:43:22Z",
          "updatedAt": "2025-06-11T19:43:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLDmL8c66uq6l",
          "commit": {
            "abbreviatedOid": "6717164"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "Was there any previous work that you align the Producer/Recipient terminology with?\r\nAlso, I think that we shouldn't name alg values in the introduction yet, but just mention that they should be fully specified",
          "createdAt": "2025-08-19T15:15:19Z",
          "updatedAt": "2025-08-19T15:16:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nThis specification also defines new `alg` parameter values, that are fully-specified according to [Fully Specified Algorithms](https://www.ietf.org/archive/id/draft-jones-jose-fully-specified-algorithms-00.html).\r\n```",
              "createdAt": "2025-08-19T15:15:20Z",
              "updatedAt": "2025-08-19T15:16:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68WUoI",
          "commit": {
            "abbreviatedOid": "6717164"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:09:07Z",
          "updatedAt": "2025-08-27T14:09:08Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I used the following analysis for the terminology from [RFC 7515](https://datatracker.ietf.org/doc/html/rfc7515):\r\n\r\n- [Producer, Creator, Originator] for the creator of the JWS. \"Producer\" is used 9 times; \"originator\" and \"creator\" is used 1 time each. \r\n- Relatedly, [recipient, consumer] with 13, and 2 uses.",
              "createdAt": "2025-08-27T14:09:07Z",
              "updatedAt": "2025-08-27T14:09:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68juQO",
          "commit": {
            "abbreviatedOid": "c0449b7"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-28T06:58:50Z",
          "updatedAt": "2025-08-28T06:58:50Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nA primary motivation for this work is to enable HMAC signature validation from information contained within an {{SD-JWT}}, mirroring capabilities available in credential formats like {{ISO-18013-5}}.\r\n```\r\nWe need a reference in our informative section for SD-JWT draft.",
              "createdAt": "2025-08-28T06:58:50Z",
              "updatedAt": "2025-08-28T06:58:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68jzuN",
          "commit": {
            "abbreviatedOid": "c0449b7"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-28T07:06:35Z",
          "updatedAt": "2025-08-28T07:06:35Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nJSON Web Signature (JWS) {{RFC7515}} and JSON Web Algorithms (JWA) [RFC 7518] specify how to secure content with Hash-based Message Authentication Codes (HMAC) [RFC 2104] using a shared symmetric key. These specifications do not provide means to dynamically derive a MAC key for JWS validation using only public information embedded in the JWS. \r\n```",
              "createdAt": "2025-08-28T07:06:35Z",
              "updatedAt": "2025-08-28T07:06:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68j4_u",
          "commit": {
            "abbreviatedOid": "a8459bb"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-28T07:13:53Z",
          "updatedAt": "2025-08-28T07:13:53Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nA primary motivation for this work is to enable HMAC signature validation from information contained within an SD-JWT, mirroring capabilities available in credential formats like {{ISO-18013-5}}.\r\n```",
              "createdAt": "2025-08-28T07:13:53Z",
              "updatedAt": "2025-08-28T07:13:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68j5Pa",
          "commit": {
            "abbreviatedOid": "5af0e59"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-08-28T07:14:14Z",
          "updatedAt": "2025-08-28T07:14:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLDmL8c68ymcY",
          "commit": {
            "abbreviatedOid": "5af0e59"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T05:10:04Z",
          "updatedAt": "2025-08-29T05:10:04Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nJSON Web Signature (JWS) {{RFC7515}} and JSON Web Algorithms (JWA) {{RFC7518}} specify how to secure content with Hash-based Message Authentication Codes (HMAC) {{RFC2104}} using a shared symmetric key. These specifications do not provide means to dynamically derive a MAC key for JWS validation using only public information embedded in the JWS. \r\n```",
              "createdAt": "2025-08-29T05:10:04Z",
              "updatedAt": "2025-08-29T05:11:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOLDmL8c6ae98D",
      "title": "Added `pkds` header param draft-bastian-jose-dvs.md",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/20",
      "state": "MERGED",
      "author": "AltmannPeter",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added a section to define the `pkds` parameter.\r\n\r\nHave not removed impacted parts later in the specification.",
      "createdAt": "2025-06-14T02:09:51Z",
      "updatedAt": "2025-09-01T15:52:45Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "4262abb596578e67c7dbc6be47eafe735d3381f3",
      "headRepository": "AltmannPeter/draft-bastian-jose-dvs",
      "headRefName": "patch-2",
      "headRefOid": "4743ac2e3d87c441e51bc0f9b890b165da5bef84",
      "closedAt": "2025-09-01T15:52:45Z",
      "mergedAt": "2025-09-01T15:52:45Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "47747d48e049627e46dac7849ce963241b9ad7e0"
      },
      "comments": [
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am unsure about the following:\r\n\r\n1. Do we need to register the suite names?\r\n2. Should we allow any other values than jwk and kid (for jwk thumbprint)? The JWS Producer's key makes sense to make explicit and not require dereferencing as we emphasize \"self containedness\". The recipient key is out of band though, so I am not sure we should limit to jwk and jwk thumbprint there. Possible additional value is jkt but I am not sure how that fits.\r\n3. params is set to required, but contains only optional fields as all fields have safe defaults to use if omitted. Does it look weird to have a parent as required if it may be empty?",
          "createdAt": "2025-06-14T02:18:22Z",
          "updatedAt": "2025-06-17T04:16:23Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "body": "New commit after discussing the questions above with Stefan.",
          "createdAt": "2025-06-17T10:08:07Z",
          "updatedAt": "2025-06-17T10:08:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c66uuqA",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "review from @mickrau and me",
          "createdAt": "2025-08-19T15:19:24Z",
          "updatedAt": "2025-08-19T15:44:44Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "this will likely conflict with the introduciton PR?",
              "createdAt": "2025-08-19T15:19:24Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n* `rpk` (object, REQUIRED): The Recipient's public key used in DH-KA. The `rpk` object MUST contain at least one key claim as defined in Section 4.1 of {{RFC7515}}.\r\n```",
              "createdAt": "2025-08-19T15:25:47Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n* `ppk` (object, OPTIONAL):  The JWS Producer\u2019s public key used in DH-KA. The `ppk` object MUST contain at least one key claim as defined in Section 4.1 of {{RFC7515}}.\r\n```",
              "createdAt": "2025-08-19T15:26:45Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n# Appendix A. JSON Schema for the \"pkds\" Header Parameter  {#appenix-a}\r\n```",
              "createdAt": "2025-08-19T15:27:57Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nFor a machine-readable definition of these fields, see the JSON Schema in (#appendix-a).\r\n```",
              "createdAt": "2025-08-19T15:29:01Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 18,
              "body": "it's unclear what is meant by \"key claim\". We should at least recommend some options, likely \"kid\"?",
              "createdAt": "2025-08-19T15:34:20Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 22,
              "body": "Why is ppk OPTIONAL? I guess you are hinting that in SD-JWT case we would take this from \"cnf\"? Better make it RECOMMENDED unless known from context/other claims",
              "createdAt": "2025-08-19T15:43:00Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            },
            {
              "originalPosition": 26,
              "body": "I would prefer name this closer to key derviation, e.g. kd-params, or kd",
              "createdAt": "2025-08-19T15:43:55Z",
              "updatedAt": "2025-08-19T15:44:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c66vGEz",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-19T15:45:33Z",
          "updatedAt": "2025-08-19T15:45:33Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Should we rather fix the key length over the `alg`?",
              "createdAt": "2025-08-19T15:45:33Z",
              "updatedAt": "2025-08-19T15:45:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68WcBr",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:16:20Z",
          "updatedAt": "2025-08-27T14:16:21Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I am not a fan of the word verifying party. The use of 'verifier' in RFC 7515 seems focused on the module that does signature verification. Recipient / consumer I read as referring to the actor who the JWS is sent to.",
              "createdAt": "2025-08-27T14:16:20Z",
              "updatedAt": "2025-08-27T14:16:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68Weoj",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:19:22Z",
          "updatedAt": "2025-08-27T14:19:22Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "We could make it more specific by specifically mentioning 4.1.2 - 4.1.8.",
              "createdAt": "2025-08-27T14:19:22Z",
              "updatedAt": "2025-08-27T14:19:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68WhXy",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:22:06Z",
          "updatedAt": "2025-08-27T14:22:07Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Precisely, the requirement ought to be that they `ppk` can be unambiguously resolved. If it is defined in the `cnf`, there seems to be no reason to put the same key in the `pkds`.",
              "createdAt": "2025-08-27T14:22:07Z",
              "updatedAt": "2025-08-27T14:22:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68Wjm5",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:24:32Z",
          "updatedAt": "2025-08-27T14:24:32Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "No objection. I would not since key derivation is implied, but clarity is never wrong :).",
              "createdAt": "2025-08-27T14:24:32Z",
              "updatedAt": "2025-08-27T14:24:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68Wl1W",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-27T14:26:56Z",
          "updatedAt": "2025-08-27T14:26:57Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Not sure I follow. The `length` is meaningful only for the MAC key, and its length requirements are determined solely by the MAC, no? Even if it is the alg that determines it, the alg MUST NOT define a length that is incompatible with the MAC anyway. What I am missing :)?",
              "createdAt": "2025-08-27T14:26:56Z",
              "updatedAt": "2025-08-27T14:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68kFDE",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-28T07:27:00Z",
          "updatedAt": "2025-08-28T07:27:00Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "agreed",
              "createdAt": "2025-08-28T07:27:00Z",
              "updatedAt": "2025-08-28T07:27:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68kWTh",
          "commit": {
            "abbreviatedOid": "a786212"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-28T07:46:21Z",
          "updatedAt": "2025-08-28T07:46:22Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Agreed that fixing the length to the algorithm results in better interoparbility, while `length` doesn't provide security benefits\r\n```suggestion\r\n```",
              "createdAt": "2025-08-28T07:46:21Z",
              "updatedAt": "2025-08-28T07:46:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c68yqZ0",
          "commit": {
            "abbreviatedOid": "69f779f"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T05:20:57Z",
          "updatedAt": "2025-08-29T05:20:58Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-08-29T05:20:57Z",
              "updatedAt": "2025-08-29T05:20:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c686-3H",
          "commit": {
            "abbreviatedOid": "f82870f"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T17:52:45Z",
          "updatedAt": "2025-08-29T17:52:51Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\n    }\n```\n",
              "createdAt": "2025-08-29T17:52:45Z",
              "updatedAt": "2025-08-29T17:52:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c687yRv",
          "commit": {
            "abbreviatedOid": "f7f16ee"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T19:14:04Z",
          "updatedAt": "2025-08-29T19:14:04Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n**Producer**:\r\n```",
              "createdAt": "2025-08-29T19:14:04Z",
              "updatedAt": "2025-08-29T19:14:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c687yf8",
          "commit": {
            "abbreviatedOid": "f7f16ee"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T19:14:13Z",
          "updatedAt": "2025-08-29T19:14:14Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n**Recipient**:\r\n```",
              "createdAt": "2025-08-29T19:14:14Z",
              "updatedAt": "2025-08-29T19:14:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c6873zV",
          "commit": {
            "abbreviatedOid": "f7f16ee"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-29T19:19:01Z",
          "updatedAt": "2025-08-29T19:19:02Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "```suggestion\r\n```\r\n\r\n```",
              "createdAt": "2025-08-29T19:19:02Z",
              "updatedAt": "2025-08-29T19:19:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c69FYnJ",
          "commit": {
            "abbreviatedOid": "8392ecd"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-01T06:53:09Z",
          "updatedAt": "2025-09-01T06:53:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Why is this part being removed? Terminology section is very common in IETF standards",
              "createdAt": "2025-09-01T06:53:09Z",
              "updatedAt": "2025-09-01T06:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c69LR2A",
          "commit": {
            "abbreviatedOid": "8392ecd"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-01T14:12:49Z",
          "updatedAt": "2025-09-01T14:12:50Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n{::boilerplate bcp14-tagged}\r\n\r\n# Terminology\r\n\r\nThe draft uses \"JSON Web Signature\", \"JOSE Header\", \"JWS Signature\", \"JWS Signing Input\" as defined by {{RFC7515}}.\r\n```",
              "createdAt": "2025-09-01T14:12:49Z",
              "updatedAt": "2025-09-01T14:12:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c69MQmi",
          "commit": {
            "abbreviatedOid": "4743ac2"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-01T15:52:35Z",
          "updatedAt": "2025-09-01T15:52:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOLDmL8c6pjilT",
      "title": "rename title, update terminology",
      "url": "https://github.com/paulbastian/draft-bastian-jose-dvs/pull/25",
      "state": "OPEN",
      "author": "mickrau",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "solves #21  #24 ",
      "createdAt": "2025-09-19T17:47:05Z",
      "updatedAt": "2025-09-25T07:33:13Z",
      "baseRepository": "paulbastian/draft-bastian-jose-dvs",
      "baseRefName": "main",
      "baseRefOid": "47747d48e049627e46dac7849ce963241b9ad7e0",
      "headRepository": "paulbastian/draft-bastian-jose-dvs",
      "headRefName": "feature/change_title",
      "headRefOid": "bf4fccff20e77c13ec9d4358c782dfa5c04cd94d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLDmL8c7B9DWa",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T16:47:14Z",
          "updatedAt": "2025-09-22T16:47:14Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\n * `ppk`: private key of the Producer\r\n```",
              "createdAt": "2025-09-22T16:47:14Z",
              "updatedAt": "2025-09-22T16:47:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9Kf7",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T16:51:44Z",
          "updatedAt": "2025-09-22T16:51:44Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\n * `salt` : Optional salt for key derivation\r\n```",
              "createdAt": "2025-09-22T16:51:44Z",
              "updatedAt": "2025-09-22T16:55:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9MQo",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T16:52:49Z",
          "updatedAt": "2025-09-22T16:52:49Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Why not rely on the RFC 5869 defaults? See https://www.rfc-editor.org/rfc/rfc5869#section-2.2",
              "createdAt": "2025-09-22T16:52:49Z",
              "updatedAt": "2025-09-22T16:52:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9RDc",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T16:55:58Z",
          "updatedAt": "2025-09-22T16:55:59Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\n * `info` : Optional info for key derivation\r\n```",
              "createdAt": "2025-09-22T16:55:58Z",
              "updatedAt": "2025-09-22T16:55:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9SE5",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T16:56:47Z",
          "updatedAt": "2025-09-22T16:56:47Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Same as above, https://www.rfc-editor.org/rfc/rfc5869#section-2.3 already specifies the default. And if we want to set another KDF later, I would prefer we use the KDF default values.",
              "createdAt": "2025-09-22T16:56:47Z",
              "updatedAt": "2025-09-22T16:56:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9ZSM",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:02:50Z",
          "updatedAt": "2025-09-22T17:02:51Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "```suggestion\r\ndef pkdsSign(ppk, rpk, msg, salt, info)\r\n```",
              "createdAt": "2025-09-22T17:02:50Z",
              "updatedAt": "2025-09-23T07:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9Zkr",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:03:06Z",
          "updatedAt": "2025-09-22T17:03:07Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "Input is bytes.",
              "createdAt": "2025-09-22T17:03:07Z",
              "updatedAt": "2025-09-22T17:36:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9Z8I",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:03:26Z",
          "updatedAt": "2025-09-22T17:03:27Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "```suggestion\r\n    dh =  DH(ppk, rpk)\r\n```",
              "createdAt": "2025-09-22T17:03:26Z",
              "updatedAt": "2025-09-22T17:03:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9dH_",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:06:37Z",
          "updatedAt": "2025-09-22T17:06:37Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n * `rpk`: private key of the Recipient\r\n```",
              "createdAt": "2025-09-22T17:06:37Z",
              "updatedAt": "2025-09-22T17:06:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9ddP",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:06:58Z",
          "updatedAt": "2025-09-22T17:06:59Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "```suggestion\r\n * `ppk`: public key of the Producer\r\n```",
              "createdAt": "2025-09-22T17:06:58Z",
              "updatedAt": "2025-09-22T17:06:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9dy_",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:07:15Z",
          "updatedAt": "2025-09-22T17:07:16Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n * `salt` : Optional salt for key derivation\r\n```",
              "createdAt": "2025-09-22T17:07:16Z",
              "updatedAt": "2025-09-22T17:07:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9d9v",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:07:27Z",
          "updatedAt": "2025-09-22T17:07:28Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n * `info` : Optional info for key derivation\r\n```",
              "createdAt": "2025-09-22T17:07:27Z",
              "updatedAt": "2025-09-22T17:07:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9fCF",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:08:16Z",
          "updatedAt": "2025-09-22T17:08:16Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "```suggestion\r\ndef pkdsVerify(skR, pkS, msg, signature, salt, info)\r\n```",
              "createdAt": "2025-09-22T17:08:16Z",
              "updatedAt": "2025-09-23T07:58:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9k0N",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:13:14Z",
          "updatedAt": "2025-09-22T17:13:14Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "```suggestion\r\n      return 0\r\n```",
              "createdAt": "2025-09-22T17:13:14Z",
              "updatedAt": "2025-09-22T17:13:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9lAR",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:13:27Z",
          "updatedAt": "2025-09-22T17:13:27Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n    return 1\r\n```",
              "createdAt": "2025-09-22T17:13:27Z",
              "updatedAt": "2025-09-22T17:13:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9l8V",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:14:21Z",
          "updatedAt": "2025-09-22T17:14:22Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "The way I would expect the verify function to work is that it returns 1 upon signature verification success and 0 otherwise.",
              "createdAt": "2025-09-22T17:14:22Z",
              "updatedAt": "2025-09-22T17:14:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9vOG",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:22:51Z",
          "updatedAt": "2025-09-22T17:22:51Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "```suggestion\r\n* `kdfp` (object, OPTIONAL): Contains the inputs to the key derivation function specified by the `alg` name. The `kdfp` object MUST contain the following members:\r\n```",
              "createdAt": "2025-09-22T17:22:51Z",
              "updatedAt": "2025-09-22T17:22:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9v7F",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:23:26Z",
          "updatedAt": "2025-09-22T17:23:26Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "key derivation function parameters = kdfp \r\nrelates to https://github.com/paulbastian/draft-bastian-jose-dvs/issues/23",
              "createdAt": "2025-09-22T17:23:26Z",
              "updatedAt": "2025-09-22T17:23:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9zmW",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:26:58Z",
          "updatedAt": "2025-09-22T17:26:58Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "The JWS will carry base64url encoded bytes for salt and info. But the function will use bytes.",
              "createdAt": "2025-09-22T17:26:58Z",
              "updatedAt": "2025-09-22T17:26:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7B9_Am",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:37:18Z",
          "updatedAt": "2025-09-22T17:37:18Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Should we define info as text only and not allow byte to avoid base64url twice encoding?",
              "createdAt": "2025-09-22T17:37:18Z",
              "updatedAt": "2025-09-22T17:37:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CG0to",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:09:09Z",
          "updatedAt": "2025-09-23T07:09:09Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "using pk for both private key and public key is very confusing",
              "createdAt": "2025-09-23T07:09:09Z",
              "updatedAt": "2025-09-23T07:09:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CG17u",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:10:53Z",
          "updatedAt": "2025-09-23T07:10:54Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Good point, should we reference RFC 5869?",
              "createdAt": "2025-09-23T07:10:54Z",
              "updatedAt": "2025-09-23T07:10:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CG88K",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:20:07Z",
          "updatedAt": "2025-09-23T07:20:08Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "if HKDF allows everything, we should not restrict here. we may give an implementation considerations ",
              "createdAt": "2025-09-23T07:20:07Z",
              "updatedAt": "2025-09-23T07:20:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CG--1",
          "commit": {
            "abbreviatedOid": "c455797"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:22:44Z",
          "updatedAt": "2025-09-23T07:22:45Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "PKDH-0?\r\n\r\nShould this be the alg name?\r\n\r\n@AltmannPeter @Razumain @paulbastian ",
              "createdAt": "2025-09-23T07:22:45Z",
              "updatedAt": "2025-09-23T07:22:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CHDXj",
          "commit": {
            "abbreviatedOid": "8a03f45"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:26:42Z",
          "updatedAt": "2025-09-23T07:26:42Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "We should likely remove the requirements column?",
              "createdAt": "2025-09-23T07:26:42Z",
              "updatedAt": "2025-09-23T07:26:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CHENL",
          "commit": {
            "abbreviatedOid": "c455797"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T07:27:39Z",
          "updatedAt": "2025-09-23T07:27:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Should we use HMAC or just MAC in the title?\r\n\r\n@paulbastian @AltmannPeter \u00a0@Razumain ",
              "createdAt": "2025-09-23T07:27:39Z",
              "updatedAt": "2025-09-23T07:27:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CIr32",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T09:29:52Z",
          "updatedAt": "2025-09-23T09:29:52Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "Had a chat and the consensus is that the raise exception is clearer. Ignore my proposal.",
              "createdAt": "2025-09-23T09:29:52Z",
              "updatedAt": "2025-09-23T09:29:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CJJ-K",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T10:03:16Z",
          "updatedAt": "2025-09-23T10:03:17Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\n * `skP`: private key of the Producer\r\n```",
              "createdAt": "2025-09-23T10:03:16Z",
              "updatedAt": "2025-09-23T10:03:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CJKwY",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T10:04:01Z",
          "updatedAt": "2025-09-23T10:04:01Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "skP aligns better with Producer. skS is for Sender. I prefer we stick with Producer and propose to change the abbr to match.",
              "createdAt": "2025-09-23T10:04:01Z",
              "updatedAt": "2025-09-23T10:04:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CJOKq",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T10:07:02Z",
          "updatedAt": "2025-09-23T10:07:02Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "Had a closer look at salts and thought about it a bit more. The reason salts exist in HKDF is for entropy. We do not need it for entropy. \r\n\r\nAlso, when deriving keys from the same input (e.g., key splitting) you need to use the same salt.\r\n\r\nConsequently, it may be better to simply remove the salt altogether from the spec. We do not need it and it introduces a source for error.",
              "createdAt": "2025-09-23T10:07:02Z",
              "updatedAt": "2025-09-23T10:07:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CMaIM",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T13:28:15Z",
          "updatedAt": "2025-09-23T13:28:15Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "@Razumain proposed using text only and avoid byte string. ",
              "createdAt": "2025-09-23T13:28:15Z",
              "updatedAt": "2025-09-23T13:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CMa0Q",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "AltmannPeter",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-23T13:28:56Z",
          "updatedAt": "2025-09-23T13:28:56Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "I recall we settled on fully specified, no?",
              "createdAt": "2025-09-23T13:28:56Z",
              "updatedAt": "2025-09-23T13:28:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CrIzk",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:05:37Z",
          "updatedAt": "2025-09-25T07:05:37Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "rename to pkdHhmacSign?",
              "createdAt": "2025-09-25T07:05:37Z",
              "updatedAt": "2025-09-25T07:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7Cref9",
          "commit": {
            "abbreviatedOid": "716dd09"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:28:21Z",
          "updatedAt": "2025-09-25T07:28:21Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "agreed, but let's do it in a separate PR",
              "createdAt": "2025-09-25T07:28:21Z",
              "updatedAt": "2025-09-25T07:28:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CrfpU",
          "commit": {
            "abbreviatedOid": "c455797"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:29:32Z",
          "updatedAt": "2025-09-25T07:29:32Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "further discussion at #12 ",
              "createdAt": "2025-09-25T07:29:32Z",
              "updatedAt": "2025-09-25T07:29:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CrgXv",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:30:21Z",
          "updatedAt": "2025-09-25T07:30:21Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "Further discussion in #26 ",
              "createdAt": "2025-09-25T07:30:21Z",
              "updatedAt": "2025-09-25T07:30:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7Crh6E",
          "commit": {
            "abbreviatedOid": "c3244d3"
          },
          "author": "mickrau",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:32:18Z",
          "updatedAt": "2025-09-25T07:32:18Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "fixed",
              "createdAt": "2025-09-25T07:32:18Z",
              "updatedAt": "2025-09-25T07:32:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7Crigp",
          "commit": {
            "abbreviatedOid": "bf4fccf"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T07:32:57Z",
          "updatedAt": "2025-09-25T07:32:57Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Moved to new issue: #27 ",
              "createdAt": "2025-09-25T07:32:57Z",
              "updatedAt": "2025-09-25T07:32:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLDmL8c7CritY",
          "commit": {
            "abbreviatedOid": "bf4fccf"
          },
          "author": "paulbastian",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-25T07:33:13Z",
          "updatedAt": "2025-09-25T07:33:13Z",
          "comments": []
        }
      ]
    }
  ]
}